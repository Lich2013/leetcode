from typing import List

class Solution:
    def maxSumTwoNoOverlap(self, A: List[int], L: int, M: int) -> int:
        for x in range(1, len(A)):
            A[x] += A[x-1]
        result, LMax, MMax = A[L+M-1], A[L-1], A[M-1]
        for x in range(L+M, len(A)):
            # L before M
            LMax = max(LMax, A[x-M]-A[x-M-L])
            result = max(result, LMax+A[x]-A[x-M])
        for x in range(L+M, len(A)):
            # M before L
            MMax = max(MMax, A[x-L]-A[x-M-L])
            result = max(result, MMax+A[x]-A[x-L])
        return result
if __name__ == '__main__':
    print(Solution().maxSumTwoNoOverlap([220,225,885,209,229,885,937,901,688,685,443,388,72,289,356,603,105,821,664,960,806,594,746,81,126,668,698,653,132,735,198,302,196,671,717,176,323,237,356,771,826,48,560,519,678,412,380,559,218,847,272,114,294,266,45,920,296,330,89,204,891,251,366,723,473,268,797,795,632,431,952,900,190,924,32,450,0,897,425,773,307,55,663,179,460,722,612,17,659,17,564,119,879,69,18,522,68,388,287,957,647,629,942,38,419,751,143,326,68,852,680,665,51,514,813,293,89,507,214,146,70,97,879,888,270,478,51,769,912,987,696,216,768,663,391,239,568,583,816,265,405,837,499,552,235,292,373,532,28,50,494,217,846,85,986,168,812,126,847,230,850,128,166,594,11,475,684,622,532,841,912,27,983,210,693,944,247,448,503,490,191,77,482,683,96,697,303,911,11,48,542,368,947,969,800,625,805,238,328,321,152,214,348,995,178,432,379,598,268,762,239,186,765,173,418,252,195,59,328,415,78,467,523,478,558,715,230,96,67,666,585,648,741,906,31,832,400,47,17,331,459,72,7,144,50,52,481,650,961,703,586,91,251,653,118,666,280,898,484,230,297,14,396,483,463,991,359,316,435,602,939,557,521,422,931,312,976,439,678,454,903,113,89,324,363,88,834,38,112,336,773,54,721,196,963,60,839,130,91,825,667,510,65,308,381,829,782,759,242,425,850,417,69,381,984,600,983,747,404,501,33,876,188,260,577,256,828,247,707,268,328,419,299,942,228,879,765,569,718,250,610,594,1000,456,801,775,900,329,545,988,53,468,752,957,973,898,170,157,708,579,358,272,919,969,339,727,448,272,816,263,401,561,933,981,975,373,96,171,813,115,42,768,616,387,75,485,872,169,566,421,569,143,110,575,512,758,972,967,34,308,441,663,308,313,818,611,984,803,994,628,681,78,626,972,672,14,88,441,480,443,692,549,830,98,747,713,235,618,713,130,428,577,259,152,343,53,112,460,493,792,174,827,741,957,356,411,11,196,863,198,997,389,554,462,371,399,329,442,106,8,863,534,665,74,306,741,601,345,770,576,970,938,314,78,510,33,980,756,864,4,167,106,967,901,839,805,319,738,262,320,56,85,607,26,920,838,31,575,793,876,742,580,980,673,909,915,258,513,461,460,158,450,170,937,681,859,716,370,405,952,978,351,780,440,34,487,477,374,360,803,22,915,544,586,995,956,396,199,562,256,542,320,80,8,121,682,278,429,875,979,384,155,798,719,724,828,668,58,660,899,402,71,224,654,370,61,127,115,263,741,479,649,374,29,485,598,684,423,471,170,59,218,223,316,491,70,988,881,881,590,640,541,431,233,144,379,672,802,694,380,917,772,638,716,44,193,562,424,1000,765,211,699,169,360,412,901,564,299,79,520,926,157,59,628,482,251,165,378,665,680,472,775,52,68,324,380,833,222,660,488,932,791,337,625,365,29,754,78,563,787,140,78,74,231,287,118,572,574,405,289,868,159,478,892,90,107,340,592,462,688,605,174,22,725,131,846,488,784,967,877,471,905,880,584,991,930,921,191,111,102,869,862,409,909,247,418,915,342,565,543,93,374,418,333,346,179,793,928,413,748,415,786,752,957,845,841,481,746,900,644,924,354,33,32,850,52,36,450,143,959,395,88,874,276,120,491,578,32,242,479,376,507,217,629,196,409,629,632,443,321,1000,762,881,372,768,822,105,479,675,751,928,533,140,331,619,68,185,672,419,437,947,670,497,397,811,508,395,80,610,408,897,207,713,843,866,901,37,233,786,786,971,512,454,803,796,581,831,477,142,994,338,846,16,697,257,408,811,243,749,87,714,985,199,967,53,349,800,47,637,446,685,170,114,409,353,769,884,930,784,629,433,508,714,580,249,163,756,346,469,463,500,429,69,728,700,778,547,381,486,254,781,794,128,177,74,480,9,459,14,293,13,256,295,114,981,811,450,610,525,21,381,529,725,36,181,159,270,743,995,636,693,809,335,10,749,108,688,376,720,229,46,374,61,566,973,571,857,574,76,208,362,851,2,130,309,197,442,32,494,421,531,952,888,74,48,316,867,636,319,648,845,803,774,26,949,690,217,110,610,771,283,528,348,759,808,261,929,980,579,445,892,285,834,51,890,317,967,582,796,602,524,477,775,0,169,438,620,267,711,610,889,334,664,968,102,720,310,829,682,787,579,991,148,409,57,908,705,365,505,72,406,197,876,524,848,232,925,43,473,96,730,811,7,922,949,618,414,76,177,26],
        778,21))